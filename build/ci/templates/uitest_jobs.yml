parameters:
  jobs: []
  pythonVersions: [
      {
          "version": "3.7",
          "displayName": "37",
          "excludeTags": "--tags=~@python3.6 --tags=~@python3.5 --tags=~@python2"
      },
      {
          "version": "3.6",
          "displayName": "36",
          "excludeTags": "--tags=~@python3.7 --tags=~@python3.5 --tags=~@python2"
      },
      {
          "version": "3.5",
          "displayName": "35",
          "excludeTags": "--tags=~@python3.7 --tags=~@python3.6 --tags=~@python2"
      },
      {
          "version": "2.7",
          "displayName": "27",
          "excludeTags": "--tags=~@python3.7 --tags=~@python3.5 --tags=~@python3"
      }
    ]


jobs:
- job: UITest
#   dependsOn:
#     - Compile
#     - Build
  timeoutInMinutes: 90
  strategy:
    matrix:
      ${{ each job in parameters.jobs }}:
        ${{ each py in parameters.pythonVersions }}:
          ${{ format('Mac{0}{1}', py.displayName, job.test) }}:
            PythonVersion: ${{ py.version }}
            VMImageName: "macos-10.13"
            Tags: ${{ job.tags }}
            ExcludeTags: ${{ py.excludeTags }}
            AgentJobName: ${{ format('Mac{0}{1}', py.displayName, job.test) }}

          ${{ format('Win{0}{1}', py.displayName, job.test) }}:
            PythonVersion: ${{ py.version }}
            VMImageName: "vs2017-win2016"
            Tags: ${{ job.tags }}
            ExcludeTags: ${{ py.excludeTags }}
            AgentJobName: ${{ format('Mac{0}{1}', py.displayName, job.test) }}

          ${{ format('Linux{0}{1}', py.displayName, job.test) }}:
            PythonVersion: ${{ py.version }}
            VMImageName: "ubuntu-16.04"
            Tags: ${{ job.tags }}
            ExcludeTags: ${{ py.excludeTags }}
            AgentJobName: ${{ format('Mac{0}{1}', py.displayName, job.test) }}

  pool:
    vmImage: $(VMImageName)

  steps:
    - template: uitest_phases.yml
      parameters:
        excludeTags: $(ExcludeTags)
