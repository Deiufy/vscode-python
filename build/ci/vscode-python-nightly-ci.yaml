# Nightly build
# Notes: Scheduled builds don't have a trigger in YAML (as of this writing).
#        Trigger is set through the Azure DevOps UI `Nightly Build->Edit->...->Triggers`.

name: '$(Year:yyyy).$(Month).0.$(BuildID)-alpha'

# Not the CI build, see `vscode-python-ci.yaml`.
trigger: none

# Not the PR build for merges to master and release.
# pr: none
pr:
    autoCancel: true
    branches:
        include: ["master", "release"]
    paths:
        exclude:
            [
                "/news/1 Enhancements",
                "/news/2 Fixes",
                "/news/3 Code Health",
                "/.vscode",
            ]

# Variables that are available for the entire pipeline.
variables:
  PythonVersion: '3.7'
  NodeVersion: '10.5.0'
  NpmVersion: 'latest'
  MOCHA_FILE: '$(Build.ArtifactStagingDirectory)/test-junit.xml' # All test files will write their JUnit xml output to this file, clobbering the last time it was written.
  MOCHA_REPORTER_JUNIT: true # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter).

jobs:
- job: Build

  pool:
    vmImage: "macos-10.13"

  steps:
    - template: templates/build_phases.yml

- job: UI_Test
  dependsOn: Build
  strategy:
    matrix:
      # Some tests need not be run on both Mac & Linux.
      # Prefer Mac over linux
      # TODO: Check which is faster and use which ever is faster.
      # Today we're using Mac, however if linux is faster use that instead.
      # Python 3.7
      "Mac-Py3.7 Smoke":
        PythonVersion: "3.7"
        VMImageName: "macos-10.13"
        Tags: "--tags=smoke"
        Test: true

      "Win-Py3.7 Smoke":
        PythonVersion: "3.7"
        VMImageName: 'vs2017-win2016'
        Tags: "--tags=smoke"
        Test: true

      "Linux-Py3.7 Smoke":
        PythonVersion: "3.7"
        VMImageName: 'ubuntu-16.04'
        Tags: "--tags=smoke"
        Test: true

      # "Mac-Py3.7 Testing":
      #   PythonVersion: "3.7"
      #   VMImageName: "macos-10.13"
      #   Tags: "--tags=test"
      #   Test: true

    # "Mac-Py3.7 Terminal":
    #     PythonVersion: "3.7"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=terminal"
    #     Test: true

    # "Linux-Py3.7 Terminal":
    #     PythonVersion: "3.7"
    #     VMImageName: 'ubuntu-16.04'
    #     Tags: "--tags=terminal"
    #     Test: true

#   "Win-Py3.7 Testing":
#       PythonVersion: "3.7"
#       VMImageName: 'vs2017-win2016'
#       Tags: "--tags=test"
#       Test: true
#       Windows: true

#   "Win-Py3.7 Terminal":
#       PythonVersion: "3.7"
#       VMImageName: 'vs2017-win2016'
#       Tags: "--tags=terminal"
#       Test: true
#       Windows: true

      # Python 3.6
      "Mac-Py3.6 Smoke":
        PythonVersion: "3.6"
        VMImageName: "macos-10.13"
        TestsToRun: "UITests"
        Tags: "--tags=smoke"
        Test: true
        Pyenv: true

      # "Mac-Py3.6 Testing":
      #   PythonVersion: "3.6.8"
      #   VMImageName: "macos-10.13"
      #   Tags: "--tags=test"
      #   Test: true
      #   Pyenv: true

    # "Mac-Py3.6 Terminal":
    #     PythonVersion: "3.6.8"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

    # "Linux-Py3.6 Terminal":
    #     PythonVersion: "3.6.8"
    #     VMImageName: 'ubuntu-16.04'
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

    # Python 3.5
      "Mac-Py3.5 Testing":
        PythonVersion: "3.5"
        VMImageName: "macos-10.13"
        Tags: "--tags=test"
        Test: true
        Pyenv: true

      # "Mac-Py3.5 Testing":
      #   PythonVersion: "3.5.6"
      #   VMImageName: "macos-10.13"
      #   Tags: "--tags=test"
      #   Test: true
      #   Pyenv: true

    # "Mac-Py3.5 Terminal":
    #     PythonVersion: "3.5.6"
    #     VMImageName: "macos-10.13"
    #     TestsToRun: "UITests"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

      # "Linux-Py3.5 Terminal":
      #   PythonVersion: "3.5.6"
      #   VMImageName: 'ubuntu-16.04'
      #   TestsToRun: "UITests"
      #   Tags: "--tags=terminal"
      #   Test: true
      #   Pyenv: true

    # Python 2.7
      "Mac-Py2.7 Smoke":
        PythonVersion: "2.7"
        VMImageName: "macos-10.13"
        Tags: "--tags=smoke"
        Test: true
        Pyenv: true

      # "Mac-Py2.7 Testing":
      #   PythonVersion: "2.7.16"
      #   VMImageName: "macos-10.13"
      #   TestsToRun: "UITests"
      #   Tags: "--tags=test"
      #   Test: true
      #   Pyenv: true

    # "Mac-Py2.7 Terminal":
    #     PythonVersion: "2.7.16"
    #     VMImageName: "macos-10.13"
    #     TestsToRun: "UITests"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

    # "Linux-Py2.7 Terminal":
    #     PythonVersion: "2.7.16"
    #     VMImageName: 'ubuntu-16.04'
    #     TestsToRun: "UITests"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

  pool:
    vmImage: $(VMImageName)

  steps:
    - template: templates/uitest_phases.yml

# - job: 'Nightly'
#   dependsOn: Build
#   strategy:
#     matrix:
#       # Each member of this list must contain these values:
#         # VMImageName: '[name]' - the VM image to run the tests on.
#         # TestsToRun: 'testA, testB, ..., testN' - the list of tests to execute, see the list above.
#       # Each member of this list may contain these values:
#         # NeedsPythonTestReqs: [true|false] - install the test-requirements prior to running tests. False if not set.
#         # NeedsPythonFunctionalReqs: [true|false] - install the functional-requirements prior to running tests. False if not set.
#         # PythonVersion: 'M.m' - the Python version to run. DefaultPythonVersion if not set.
#         # NodeVersion: 'x.y.z' - Node version to use. DefaultNodeVersion if not set.
#         # SkipXvfb: [true|false] - skip initialization of xvfb prior to running system tests on Linux. False if not set
#         # UploadBinary: [true|false] - upload test binaries to Azure if true. False if not set.

#       ## Virtual Environment Tests:

#       'Win-Py3.7 Unit':
#         PythonVersion: '3.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testUnitTests, pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.7 Unit':
#         PythonVersion: '3.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testUnitTests, pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.7 Unit':
#         PythonVersion: '3.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testUnitTests, pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Win-Py3.6 Unit':
#         PythonVersion: '3.6'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.6 Unit':
#         PythonVersion: '3.6'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.6 Unit':
#         PythonVersion: '3.6'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Win-Py3.5 Unit':
#         PythonVersion: '3.5'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.5 Unit':
#         PythonVersion: '3.5'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.5 Unit':
#         PythonVersion: '3.5'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Win-Py2.7 Unit':
#         PythonVersion: '2.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Linux-Py2.7 Unit':
#         PythonVersion: '2.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true
#       'Mac-Py2.7 Unit':
#         PythonVersion: '2.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'pythonUnitTests'
#         NeedsPythonTestReqs: true

#       'Win-Py3.7 Venv':
#         VMImageName: 'vs2017-win2016'
#         PythonVersion: '3.7'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         # This is for the venvTests to use, not needed if you don't run venv tests...
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Linux-Py3.7 Venv':
#         VMImageName: 'ubuntu-16.04'
#         PythonVersion: '3.7'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Mac-Py3.7 Venv':
#         VMImageName: 'macos-10.13'
#         PythonVersion: '3.7'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Win-Py3.6 Venv':
#         VMImageName: 'vs2017-win2016'
#         PythonVersion: '3.6'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Linux-Py3.6 Venv':
#         VMImageName: 'ubuntu-16.04'
#         PythonVersion: '3.6'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Mac-Py3.6 Venv':
#         VMImageName: 'macos-10.13'
#         PythonVersion: '3.6'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Win-Py3.5 Venv':
#         VMImageName: 'vs2017-win2016'
#         PythonVersion: '3.5'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Linux-Py3.5 Venv':
#         VMImageName: 'ubuntu-16.04'
#         PythonVersion: '3.5'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       'Mac-Py3.5 Venv':
#         VMImageName: 'macos-10.13'
#         PythonVersion: '3.5'
#         TestsToRun: 'venvTests'
#         NeedsPythonTestReqs: true
#         PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
#       # Note: Virtual env tests use `venv` and won't currently work with Python 2.7

#       # SingleWorkspace Tests
#       'Win-Py3.7 Single':
#         PythonVersion: '3.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.7 Single':
#         PythonVersion: '3.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.7 Single':
#         PythonVersion: '3.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Win-Py3.6 Single':
#         PythonVersion: '3.6'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.6 Single':
#         PythonVersion: '3.6'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.6 Single':
#         PythonVersion: '3.6'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Win-Py3.5 Single':
#         PythonVersion: '3.5'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.5 Single':
#         PythonVersion: '3.5'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.5 Single':
#         PythonVersion: '3.5'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Win-Py2.7 Single':
#         PythonVersion: '2.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py2.7 Single':
#         PythonVersion: '2.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py2.7 Single':
#         PythonVersion: '2.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testSingleWorkspace'
#         NeedsPythonTestReqs: true

#       # MultiWorkspace Tests
#       'Win-Py3.7 Multi':
#         PythonVersion: '3.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.7 Multi':
#         PythonVersion: '3.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.7 Multi':
#         PythonVersion: '3.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Win-Py3.6 Multi':
#         PythonVersion: '3.6'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.6 Multi':
#         PythonVersion: '3.6'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.6 Multi':
#         PythonVersion: '3.6'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Win-Py3.5 Multi':
#         PythonVersion: '3.5'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.5 Multi':
#         PythonVersion: '3.5'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.5 Multi':
#         PythonVersion: '3.5'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Win-Py2.7 Multi':
#         PythonVersion: '2.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Linux-Py2.7 Multi':
#         PythonVersion: '2.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true
#       'Mac-Py2.7 Multi':
#         PythonVersion: '2.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testMultiWorkspace'
#         NeedsPythonTestReqs: true

#       # Debugger integration Tests
#       'Win-Py3.7 Debugger':
#         PythonVersion: '3.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.7 Debugger':
#         PythonVersion: '3.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.7 Debugger':
#         PythonVersion: '3.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Win-Py3.6 Debugger':
#         PythonVersion: '3.6'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.6 Debugger':
#         PythonVersion: '3.6'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.6 Debugger':
#         PythonVersion: '3.6'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Win-Py3.5 Debugger':
#         PythonVersion: '3.5'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Linux-Py3.5 Debugger':
#         PythonVersion: '3.5'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Mac-Py3.5 Debugger':
#         PythonVersion: '3.5'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Win-Py2.7 Debugger':
#         PythonVersion: '2.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Linux-Py2.7 Debugger':
#         PythonVersion: '2.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true
#       'Mac-Py2.7 Debugger':
#         PythonVersion: '2.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testDebugger'
#         NeedsPythonTestReqs: true

#       # Functional tests (not mocked Jupyter)
#       'Windows-Py3.7 Functional':
#         PythonVersion: '3.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         # This tells the functional tests to not mock out Jupyter...
#         VSCODE_PYTHON_ROLLING: true
#       'Linux-Py3.7 Functional':
#         PythonVersion: '3.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Mac-Py3.7 Functional':
#         PythonVersion: '3.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Windows-Py3.6 Functional':
#         PythonVersion: '3.6'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Linux-Py3.6 Functional':
#         PythonVersion: '3.6'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Mac-Py3.6 Functional':
#         PythonVersion: '3.6'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Windows-Py3.5 Functional':
#         PythonVersion: '3.5'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Linux-Py3.5 Functional':
#         PythonVersion: '3.5'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Mac-Py3.5 Functional':
#         PythonVersion: '3.5'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Windows-Py2.7 Functional':
#         PythonVersion: '2.7'
#         VMImageName: 'vs2017-win2016'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Linux-Py2.7 Functional':
#         PythonVersion: '2.7'
#         VMImageName: 'ubuntu-16.04'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true
#       'Mac-Py2.7 Functional':
#         PythonVersion: '2.7'
#         VMImageName: 'macos-10.13'
#         TestsToRun: 'testfunctional'
#         NeedsPythonTestReqs: true
#         NeedsPythonFunctionalReqs: true
#         VSCODE_PYTHON_ROLLING: true

#   pool:
#     vmImage: $(VMImageName)

#   steps:
#     - template: templates/test_phases.yml
