name: '$(Year:yyyy).$(Month).0.$(BuildID)-ci'
# PR Validation build.
# Notes: Only trigger a PR build for master and release, and skip build/rebuild
#        on changes in the news and .vscode folders.
pr:
  autoCancel: true
  branches:
    include: ["master", "release"]
  paths:
    exclude: ["/news/1 Enhancements", "/news/2 Fixes", "/news/3 Code Health", "/.vscode"]

# Not the CI build for merges to master and release.
trigger: none

# Variables that are available for the entire pipeline.
variables:
  PythonVersion: '3.7'
  NodeVersion: '10.5.0'
  NpmVersion: 'latest'
  MOCHA_FILE: '$(Build.ArtifactStagingDirectory)/test-junit.xml' # All test files will write their JUnit xml output to this file, clobbering the last time it was written.
  MOCHA_REPORTER_JUNIT: true # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter).
  VSC_PYTHON_FORCE_LOGGING: true # Enable this to turn on console output for the logger

jobs:
- job: Compile
  variables:
    Build: false
  pool:
    vmImage: "macos-10.13"
  steps:
    - template: templates/build.yml

- job: Build
  variables:
    Build: true
  pool:
    vmImage: "macos-10.13"
  steps:
    - template: templates/build.yml

- job: Smoke
#   dependsOn:
#     - Compile
#     - Build
  strategy:
    matrix:
      # Some tests need not be run on both Mac & Linux.
      # Prefer Mac over linux
      # TODO: Check which is faster and use which ever is faster.
      # Today we're using Mac, however if linux is faster use that instead.
      # Python 3.7
      "Mac-Py3.7 Smoke":
        PythonVersion: "3.7"
        VMImageName: "macos-10.13"
        Tags: "--tags=smoke"
        Test: true

      "Mac-Py3.7 Testing":
        PythonVersion: "3.7"
        VMImageName: "macos-10.13"
        Tags: "--tags=test"
        Test: true

      "Win-Py3.7 Smoke":
        PythonVersion: "3.7"
        VMImageName: 'vs2017-win2016'
        Tags: "--tags=smoke"
        Test: true

      "Win-Py3.7 Testing":
        PythonVersion: "3.7"
        VMImageName: 'vs2017-win2016'
        Tags: "--tags=test"
        Test: true

      "Linux-Py3.7 Smoke":
        PythonVersion: "3.7"
        VMImageName: 'ubuntu-16.04'
        Tags: "--tags=smoke"
        Test: true

      "Linux-Py3.7 Testing":
        PythonVersion: "3.7"
        VMImageName: 'ubuntu-16.04'
        Tags: "--tags=test"
        Test: true

      # "Mac-Py3.7 Testing":
      #   PythonVersion: "3.7"
      #   VMImageName: "macos-10.13"
      #   Tags: "--tags=test"
      #   Test: true

    # "Mac-Py3.7 Terminal":
    #     PythonVersion: "3.7"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=terminal"
    #     Test: true

    # "Linux-Py3.7 Terminal":
    #     PythonVersion: "3.7"
    #     VMImageName: 'ubuntu-16.04'
    #     Tags: "--tags=terminal"
    #     Test: true

#   "Win-Py3.7 Testing":
#       PythonVersion: "3.7"
#       VMImageName: 'vs2017-win2016'
#       Tags: "--tags=test"
#       Test: true
#       Windows: true

#   "Win-Py3.7 Terminal":
#       PythonVersion: "3.7"
#       VMImageName: 'vs2017-win2016'
#       Tags: "--tags=terminal"
#       Test: true
#       Windows: true

      # Python 3.6
    #   "Mac-Py3.6 Smoke":
    #     PythonVersion: "3.6"
    #     VMImageName: "macos-10.13"
    #     TestsToRun: "UITests"
    #     Tags: "--tags=smoke"
    #     Test: true
    #     Pyenv: true

    #   "Mac-Py3.6 Testing":
    #     PythonVersion: "3.6"
    #     VMImageName: 'vs2017-win2016'
    #     TestsToRun: "UITests"
    #     Tags: "--tags=test"
    #     Test: true
    #     Pyenv: true

    #   "Win-Py3.6 Smoke":
    #     PythonVersion: "3.6"
    #     VMImageName: 'vs2017-win2016'
    #     TestsToRun: "UITests"
    #     Tags: "--tags=smoke"
    #     Test: true
    #     Pyenv: true

    #   "Win-Py3.6 Testing":
    #     PythonVersion: "3.6"
    #     VMImageName: 'vs2017-win2016'
    #     TestsToRun: "UITests"
    #     Tags: "--tags=test"
    #     Test: true
    #     Pyenv: true

      # "Mac-Py3.6 Testing":
      #   PythonVersion: "3.6.8"
      #   VMImageName: "macos-10.13"
      #   Tags: "--tags=test"
      #   Test: true
      #   Pyenv: true

    # "Mac-Py3.6 Terminal":
    #     PythonVersion: "3.6.8"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

    # "Linux-Py3.6 Terminal":
    #     PythonVersion: "3.6.8"
    #     VMImageName: 'ubuntu-16.04'
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

    # Python 3.5
    #   "Mac-Py3.5 Smoke":
    #     PythonVersion: "3.5"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=smoke"
    #     Test: true
    #     Pyenv: true

    #   "Mac-Py3.5 Testing":
    #     PythonVersion: "3.5"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=test"
    #     Test: true
    #     Pyenv: true

    #   "Win-Py3.5 Smoke":
    #     PythonVersion: "3.5"
    #     VMImageName: 'vs2017-win2016'
    #     Tags: "--tags=smoke"
    #     Test: true
    #     Pyenv: true

    #   "Win-Py3.5 Testing":
    #     PythonVersion: "3.5"
    #     VMImageName: 'vs2017-win2016'
    #     Tags: "--tags=test"
    #     Test: true
    #     Pyenv: true

      # "Mac-Py3.5 Testing":
      #   PythonVersion: "3.5.6"
      #   VMImageName: "macos-10.13"
      #   Tags: "--tags=test"
      #   Test: true
      #   Pyenv: true

    # "Mac-Py3.5 Terminal":
    #     PythonVersion: "3.5.6"
    #     VMImageName: "macos-10.13"
    #     TestsToRun: "UITests"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

      # "Linux-Py3.5 Terminal":
      #   PythonVersion: "3.5.6"
      #   VMImageName: 'ubuntu-16.04'
      #   TestsToRun: "UITests"
      #   Tags: "--tags=terminal"
      #   Test: true
      #   Pyenv: true

    # Python 2.7
    #   "Mac-Py2.7 Smoke":
    #     PythonVersion: "2.7"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=smoke"
    #     Test: true
    #     Pyenv: true

    #   "Mac-Py2.7 Testing":
    #     PythonVersion: "2.7"
    #     VMImageName: "macos-10.13"
    #     Tags: "--tags=test"
    #     Test: true
    #     Pyenv: true

    #   "Win-Py2.7 Smoke":
    #     PythonVersion: "2.7"
    #     VMImageName: 'vs2017-win2016'
    #     Tags: "--tags=smoke"
    #     Test: true
    #     Pyenv: true

    #   "Win-Py2.7 Testing":
    #     PythonVersion: "2.7"
    #     VMImageName: 'vs2017-win2016'
    #     Tags: "--tags=test"
    #     Test: true
    #     Pyenv: true

      # "Mac-Py2.7 Testing":
      #   PythonVersion: "2.7.16"
      #   VMImageName: "macos-10.13"
      #   TestsToRun: "UITests"
      #   Tags: "--tags=test"
      #   Test: true
      #   Pyenv: true

    # "Mac-Py2.7 Terminal":
    #     PythonVersion: "2.7.16"
    #     VMImageName: "macos-10.13"
    #     TestsToRun: "UITests"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

    # "Linux-Py2.7 Terminal":
    #     PythonVersion: "2.7.16"
    #     VMImageName: 'ubuntu-16.04'
    #     TestsToRun: "UITests"
    #     Tags: "--tags=terminal"
    #     Test: true
    #     Pyenv: true

      "Mac-Py2.7 Smoke":
        PythonVersion: "2.7"
        VMImageName: "macos-10.13"
        Tags: "--tags=smoke"
        Test: true

      "Mac-Py2.7 Testing":
        PythonVersion: "2.7"
        VMImageName: "macos-10.13"
        Tags: "--tags=test"
        Test: true

      "Win-Py2.7 Smoke":
        PythonVersion: "2.7"
        VMImageName: 'vs2017-win2016'
        Tags: "--tags=smoke"
        Test: true

      "Win-Py2.7 Testing":
        PythonVersion: "2.7"
        VMImageName: 'vs2017-win2016'
        Tags: "--tags=test"
        Test: true

      "Linux-Py2.7 Smoke":
        PythonVersion: "2.7"
        VMImageName: 'ubuntu-16.04'
        Tags: "--tags=smoke"
        Test: true

      "Linux-Py2.7 Testing":
        PythonVersion: "2.7"
        VMImageName: 'ubuntu-16.04'
        Tags: "--tags=test"
        Test: true

  pool:
    vmImage: $(VMImageName)

  steps:
    - template: templates/uitest_phases.yml
